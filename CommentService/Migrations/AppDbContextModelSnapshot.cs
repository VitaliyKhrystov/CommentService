// <auto-generated />
using CommentService.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommentService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommentService.Domain.Enteties.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "2d51c19a-c724-4efc-855d-05362e5c6ea9",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "29b2a03d-d405-4e7f-8a42-eef62cc38833",
                            Name = "Moderator"
                        },
                        new
                        {
                            Id = "7310c28a-672a-4ba5-a999-450f84d21900",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("CommentService.Domain.Enteties.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BirthYear")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "02a78127-516f-4cce-9207-a6af6523b683",
                            BirthYear = 1990,
                            Email = "admin@ukr.net",
                            NickName = "Admin",
                            Password = "admin2023",
                            RoleId = "2d51c19a-c724-4efc-855d-05362e5c6ea9"
                        },
                        new
                        {
                            Id = "a8cbbe4d-5055-4796-80cb-bc322f97693c",
                            BirthYear = 2000,
                            Email = "moderator@ukr.net",
                            NickName = "Moderator",
                            Password = "moderator2023",
                            RoleId = "29b2a03d-d405-4e7f-8a42-eef62cc38833"
                        });
                });

            modelBuilder.Entity("CommentService.Domain.Enteties.User", b =>
                {
                    b.HasOne("CommentService.Domain.Enteties.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
